*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.keyboard {
  position: sticky; // ვტოვებთ მხოლოდ ამ position თვისებას
  bottom: 0;
  left: auto; 
  right: 0;
  width: auto;
  max-width: 336px;
  margin-left: auto;
  border-radius: .5em;
  background-color: #cae8ca;
  border: 2px solid #4caf50;
  // შევქმნათ კონტეინერი ღილაკისთვის
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 0;
    z-index: 0;
  }

  .letters {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;

    .diacretials{
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      width: 100%;
      background-color: #4caf50;
    }
    .keyboard-button {
      background-color: rgb(190, 190, 247);
      margin: .3em;
      padding: .1em .7em .3em .7em;
      border-radius: .3em;
      font-size: 1.2em;
      cursor: pointer;
      box-sizing: border-box;

      .modifier {
        font-feature-settings: "liga" off;
        color: #4caf50;
      }
    }
  }

  // ღილაკი აბსოლუტური პოზიციონირებით
  .keyboard-key {
    background-color: #4c56af;
    color: white;
    position: absolute;
    width: 40px;
    height: 30px;
    padding: .3em;
    border-radius: 5px 5px 0 0;
    font-size: 1.2em;
    top: -30px; // კლავიატურის ზემოთ 30px-ით
    right: 20px; // მარჯვენა მხრიდან 20px დაშორებით
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);
    z-index: 10;
    
    &:hover {
      background-color: #3a42a0;
    }
  }
}

// CSS ცვლადი კლავიატურის სიმაღლისთვის
:root {
  --keyboard-height: 0px;
}

// iOS კლავიატურის ზემოთ განთავსებისთვის
.keyboard.mobile-keyboard-visible {
  position: sticky; // შეუცვლელი
  bottom: var(--keyboard-height);
  z-index: 1000;
  background-color: #cae8ca;
  transform: translateZ(0);
}

// ზოგადი ფიქსი sticky-ს გასამართად სხვადასხვა ბრაუზერში
.keyboard {
  /* Safari-სთვის და სხვა ბრაუზერებისთვის */
  position: -webkit-sticky;
  position: sticky;
  /* კლავიატურას გადავიყვანთ საკუთარ სტეკინგ კონტექსტში */
  isolation: isolate;
}

// iOS-თვის დამატებითი მხარდაჭერა
@supports (bottom: env(keyboard-inset-height)) {
  .keyboard.mobile-keyboard-visible {
    bottom: env(keyboard-inset-height, var(--keyboard-height));
  }
}

// უსაფრთხო არეალის მხარდაჭერა
@supports (padding: env(safe-area-inset-bottom)) {
  .keyboard {
    padding-bottom: env(safe-area-inset-bottom, 0);
  }
}

// დავრწმუნდეთ, რომ მშობელ კონტეინერს აქვს საკმარისი სიმაღლე
html, body {
  min-height: 100%;
  height: 100%;
}

body {
  position: relative;
  overflow-x: hidden;
}